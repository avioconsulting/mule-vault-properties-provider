name: Build and Publish

on:
  push:
    branches:
      - 'main'
      - 'chore/**'
      - 'feat/**'
      - 'develop'
  pull_request:
    branches:
      - 'main'

jobs:
  Build-and-Publish:
    runs-on: ubuntu-latest
    env:
      MULE_EE_USERNAME: ${{ secrets.MULE_EE_USERNAME }}
      MULE_EE_PASSWORD: ${{ secrets.MULE_EE_PASSWORD }}

    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Set up JDK 1.8 for build and unit test
        uses: actions/setup-java@v3
        with:
          distribution: adopt-hotspot
          java-version: 8
          cache: maven
          server-id: mulesoft-ee-releases
          server-username: MULE_EE_USERNAME
          server-password: MULE_EE_PASSWORD

      - name: Set Version
        id: set-version
        run: echo version=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Compile
        run: ./mvnw compile

      - name: Verify
        run: ./mvnw --batch-mode verify

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/surefire-reports/*.xml

      - name: Set up JDK 1.8 for maven central publish
        uses: actions/setup-java@v3
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
        with:
          distribution: adopt-hotspot
          java-version: 8
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase:  MAVEN_GPG_PASSPHRASE

      - name: Publish to Maven Central
        id: publish-to-maven-central
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
        run: ./mvnw deploy -Drelease=true -DskipTests=true
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: JReleaser full-Release
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{steps.set-version.outputs.version}}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          JRELEASER_VERSION: 1.6.0
        with:
          version: ${{ env.JRELEASER_VERSION }}
          arguments: full-release

      - name: JReleaser release output
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties          

  Perform-Release:
    runs-on: ubuntu-latest
    needs: Build-and-Publish
    if: ${{ !contains(needs.Build-and-Publish.outputs.version, 'SNAPSHOT') && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: adopt-hotspot
          java-version: 8
          cache: maven

      - name: Increment Version
        run: |
          ./mvnw clean build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT -DprocessAllModules versions:commit

      - name: Set New Version Variable
        id: set-new-version
        run: echo version=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: "chore/v${{ steps.set-new-version.outputs.version }}"
          commit-message: "chore: [create-pull-request]  Auto increment to v${{ steps.set-new-version.outputs.version }}"
          title: "chore: Auto increment to v${{ steps.set-new-version.outputs.version }}"
          delete-branch: true
          assignees: ${{ github.actor }}
          reviewers: adesjardin, manikmagar, kkingavio
